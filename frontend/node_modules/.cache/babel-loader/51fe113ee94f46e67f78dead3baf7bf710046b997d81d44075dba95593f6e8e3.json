{"ast":null,"code":"var _jsxFileName = \"/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/session.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = () => {\n  _s();\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [session, setSession] = useState('focus');\n  useEffect(() => {\n    let timer;\n    const handleTick = () => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      } else {\n        if (minutes === 0) {\n          // Switch between focus and break sessions\n          if (session === 'focus') {\n            setSession('break');\n            setMinutes(0.5); // Break session duration\n          } else {\n            setSession('focus');\n            setMinutes(0.25); // Focus session duration\n          }\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    };\n    if (session !== 'pause') {\n      timer = setInterval(handleTick, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [minutes, seconds, session]);\n  const handlePauseResume = () => {\n    setSession(prevSession => prevSession === 'pause' ? 'focus' : 'pause');\n  };\n  const handleReset = () => {\n    setSession('focus');\n    setMinutes(25);\n    setSeconds(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: session === 'focus' ? 'Focus Time' : 'Break Time'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePauseResume,\n      children: session === 'pause' ? 'Resume' : 'Pause'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"h0ccvvhDXamUy0/0mrhuRGTc3+4=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PomodoroTimer","_s","minutes","setMinutes","seconds","setSeconds","session","setSession","timer","handleTick","setInterval","clearInterval","handlePauseResume","prevSession","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","String","padStart","onClick","_c","$RefreshReg$"],"sources":["/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/session.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PomodoroTimer = () => {\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [session, setSession] = useState('focus');\n\n  useEffect(() => {\n    let timer;\n    \n    const handleTick = () => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      } else {\n        if (minutes === 0) {\n          // Switch between focus and break sessions\n          if (session === 'focus') {\n            setSession('break');\n            setMinutes(0.5); // Break session duration\n          } else {\n            setSession('focus');\n            setMinutes(0.25); // Focus session duration\n          }\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    };\n\n    if (session !== 'pause') {\n      timer = setInterval(handleTick, 1000);\n    }\n\n    return () => clearInterval(timer);\n\n  }, [minutes, seconds, session]);\n\n  const handlePauseResume = () => {\n    setSession((prevSession) => (prevSession === 'pause' ? 'focus' : 'pause'));\n  };\n\n  const handleReset = () => {\n    setSession('focus');\n    setMinutes(25);\n    setSeconds(0);\n  };\n\n  return (\n    <div>\n      <h2>{session === 'focus' ? 'Focus Time' : 'Break Time'}</h2>\n      <p>\n        {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n      </p>\n      <button onClick={handlePauseResume}>{session === 'pause' ? 'Resume' : 'Pause'}</button>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default PomodoroTimer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}