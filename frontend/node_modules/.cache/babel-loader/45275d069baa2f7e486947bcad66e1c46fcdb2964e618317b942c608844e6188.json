{"ast":null,"code":"var _jsxFileName = \"/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/session.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = () => {\n  _s();\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    let timer;\n\n    // Update the timer every second\n    const updateTimer = () => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      } else {\n        if (minutes > 0) {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        } else {\n          // Timer has reached 0\n          // You can add additional logic here, like displaying a message or triggering another action\n          clearInterval(timer);\n        }\n      }\n    };\n\n    // Start the timer when the component mounts\n    timer = setInterval(updateTimer, 1000);\n\n    // Clean up the timer when the component unmounts\n    return () => clearInterval(timer);\n  }, [minutes, seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n_s(PomodoroTimer, \"3PsLUfLXOwAZwSSoplnroB3WbeM=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PomodoroTimer","_s","minutes","setMinutes","seconds","setSeconds","timer","updateTimer","clearInterval","setInterval","children","String","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/session.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PomodoroTimer = () => {\n    const [minutes, setMinutes] = useState(25);\n    const [seconds, setSeconds] = useState(0);\n  \n    useEffect(() => {\n      let timer;\n  \n      // Update the timer every second\n      const updateTimer = () => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        } else {\n          if (minutes > 0) {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          } else {\n            // Timer has reached 0\n            // You can add additional logic here, like displaying a message or triggering another action\n            clearInterval(timer);\n          }\n        }\n      };\n  \n      // Start the timer when the component mounts\n      timer = setInterval(updateTimer, 1000);\n  \n      // Clean up the timer when the component unmounts\n      return () => clearInterval(timer);\n    }, [minutes, seconds]);\n  \n    return (\n      <div>\n        <p>\n          {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n        </p>\n      </div>\n    );\n};\n\nexport default PomodoroTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK;;IAET;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIH,OAAO,GAAG,CAAC,EAAE;QACfC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,IAAIF,OAAO,GAAG,CAAC,EAAE;UACfC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;UACvBG,UAAU,CAAC,EAAE,CAAC;QAChB,CAAC,MAAM;UACL;UACA;UACAG,aAAa,CAACF,KAAK,CAAC;QACtB;MACF;IACF,CAAC;;IAED;IACAA,KAAK,GAAGG,WAAW,CAACF,WAAW,EAAE,IAAI,CAAC;;IAEtC;IACA,OAAO,MAAMC,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,CAACJ,OAAO,EAAEE,OAAO,CAAC,CAAC;EAEtB,oBACEL,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAAW,QAAA,GACGC,MAAM,CAACT,OAAO,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,GAAC,EAACD,MAAM,CAACP,OAAO,CAAC,CAACQ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACf,EAAA,CArCID,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}