{"ast":null,"code":"var _jsxFileName = \"/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/DateTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateTimeDisplay = () => {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  useEffect(() => {\n    // Update the date and time every second\n    const intervalId = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000);\n\n    // Cleanup the interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []); // The empty dependency array ensures the effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Date and Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentDateTime.toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DateTimeDisplay, \"BKM6svc5X+6Po/HP9ygVfqubEbg=\");\n_c = DateTimeDisplay;\nexport default DateTimeDisplay;\nvar _c;\n$RefreshReg$(_c, \"DateTimeDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DateTimeDisplay","_s","currentDateTime","setCurrentDateTime","Date","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/DateTime.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nconst DateTimeDisplay = () => {\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n  useEffect(() => {\n    // Update the date and time every second\n    const intervalId = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000);\n\n    // Cleanup the interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []); // The empty dependency array ensures the effect runs only once on mount\n\n  return (\n    <header>\n      <h1>Current Date and Time</h1>\n      <p>{currentDateTime.toLocaleString()}</p>\n    </header>\n  );\n};\n\nexport default DateTimeDisplay;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAElEP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,kBAAkB,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Bb,OAAA;MAAAS,QAAA,EAAIN,eAAe,CAACW,cAAc,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEb,CAAC;AAACX,EAAA,CAnBID,eAAe;AAAAc,EAAA,GAAfd,eAAe;AAqBrB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}