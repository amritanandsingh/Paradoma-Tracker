{"ast":null,"code":"var _jsxFileName = \"/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/session.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = () => {\n  _s();\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(true);\n  useEffect(() => {\n    let timer;\n    const updateTimer = () => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      } else {\n        if (minutes > 0) {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        } else {\n          clearInterval(timer);\n          setIsRunning(false);\n          handleTimerCompletion();\n        }\n      }\n    };\n    if (isRunning) {\n      timer = setInterval(updateTimer, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [minutes, seconds, isRunning]);\n  const handleTimerCompletion = () => {\n    // If the timer completes, toggle between 25 and 5 minutes\n    if (minutes === 0 && seconds === 0) {\n      if (isRunning) {\n        setMinutes(5);\n      } else {\n        setMinutes(25);\n      }\n      setIsRunning(true);\n    }\n  };\n  const handlePauseResumeClick = () => {\n    setIsRunning(!isRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [String(minutes).padStart(2, '0'), \":\", String(seconds).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePauseResumeClick,\n      children: isRunning ? 'Pause' : 'Resume'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"vnvBW7XiEfFji1KpCQJuGriB5l4=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PomodoroTimer","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","timer","updateTimer","clearInterval","handleTimerCompletion","setInterval","handlePauseResumeClick","children","String","padStart","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/components/session.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PomodoroTimer = () => {\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(true);\n\n  useEffect(() => {\n    let timer;\n\n    const updateTimer = () => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      } else {\n        if (minutes > 0) {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        } else {\n          clearInterval(timer);\n          setIsRunning(false);\n          handleTimerCompletion();\n        }\n      }\n    };\n\n    if (isRunning) {\n      timer = setInterval(updateTimer, 1000);\n    }\n\n    return () => clearInterval(timer);\n  }, [minutes, seconds, isRunning]);\n\n  const handleTimerCompletion = () => {\n    // If the timer completes, toggle between 25 and 5 minutes\n    if (minutes === 0 && seconds === 0) {\n      if (isRunning) {\n        \n        setMinutes(5);\n      } else {\n        setMinutes(25);\n      }\n      setIsRunning(true);\n    }\n  };\n\n  const handlePauseResumeClick = () => {\n    setIsRunning(!isRunning);\n  };\n\n  return (\n    <div>\n      <p>\n        {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n      </p>\n      <button onClick={handlePauseResumeClick}>\n        {isRunning ? 'Pause' : 'Resume'}\n      </button>\n    </div>\n  );\n};\n\nexport default PomodoroTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK;IAET,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIL,OAAO,GAAG,CAAC,EAAE;QACfC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,IAAIF,OAAO,GAAG,CAAC,EAAE;UACfC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;UACvBG,UAAU,CAAC,EAAE,CAAC;QAChB,CAAC,MAAM;UACLK,aAAa,CAACF,KAAK,CAAC;UACpBD,YAAY,CAAC,KAAK,CAAC;UACnBI,qBAAqB,CAAC,CAAC;QACzB;MACF;IACF,CAAC;IAED,IAAIL,SAAS,EAAE;MACbE,KAAK,GAAGI,WAAW,CAACH,WAAW,EAAE,IAAI,CAAC;IACxC;IAEA,OAAO,MAAMC,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,CAACN,OAAO,EAAEE,OAAO,EAAEE,SAAS,CAAC,CAAC;EAEjC,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;IAClC;IACA,IAAIT,OAAO,KAAK,CAAC,IAAIE,OAAO,KAAK,CAAC,EAAE;MAClC,IAAIE,SAAS,EAAE;QAEbH,UAAU,CAAC,CAAC,CAAC;MACf,CAAC,MAAM;QACLA,UAAU,CAAC,EAAE,CAAC;MAChB;MACAI,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;IACnCN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GACGC,MAAM,CAACb,OAAO,CAAC,CAACc,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,GAAC,EAACD,MAAM,CAACX,OAAO,CAAC,CAACY,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACJrB,OAAA;MAAQsB,OAAO,EAAER,sBAAuB;MAAAC,QAAA,EACrCR,SAAS,GAAG,OAAO,GAAG;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzDID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA2DnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}