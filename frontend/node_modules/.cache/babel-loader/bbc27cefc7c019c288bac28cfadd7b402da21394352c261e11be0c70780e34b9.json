{"ast":null,"code":"import React,{useState,useEffect}from'react';import'bootstrap/dist/css/bootstrap.min.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RandomQuote=()=>{const[quote,setQuote]=useState('');const[author,setAuthor]=useState('');const fetchRandomQuote=async()=>{try{const response=await fetch('https://api.quotable.io/random');const data=await response.json();setQuote(data.content);setAuthor(data.author);}catch(error){console.error('Error fetching random quote:',error);}};useEffect(()=>{fetchRandomQuote();},[]);// The empty dependency array ensures the effect runs only once on mount\nconst handleRefreshClick=()=>{fetchRandomQuote();};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsxs(\"blockquote\",{className:\"blockquote\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-3\",children:quote}),/*#__PURE__*/_jsxs(\"footer\",{className:\"blockquote-footer\",children:[\"- \",author]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleRefreshClick,children:\"Refresh Quote\"})]});};export default RandomQuote;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","RandomQuote","quote","setQuote","author","setAuthor","fetchRandomQuote","response","fetch","data","json","content","error","console","handleRefreshClick","className","children","onClick"],"sources":["/Users/amritanandsinghgmail.com/Desktop/GitHub/Paradoma Tracker/frontend/src/elements/quote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst RandomQuote = () => {\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const fetchRandomQuote = async () => {\n    try {\n      const response = await fetch('https://api.quotable.io/random');\n      const data = await response.json();\n\n      setQuote(data.content);\n      setAuthor(data.author);\n    } catch (error) {\n      console.error('Error fetching random quote:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchRandomQuote();\n  }, []); // The empty dependency array ensures the effect runs only once on mount\n\n  const handleRefreshClick = () => {\n    fetchRandomQuote();\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <blockquote className=\"blockquote\">\n        <p className=\"mb-3\">{quote}</p>\n        <footer className=\"blockquote-footer\">- {author}</footer>\n      </blockquote>\n      <button className=\"btn btn-primary\" onClick={handleRefreshClick}>\n        Refresh Quote\n      </button>\n    </div>\n  );\n};\n\nexport default RandomQuote;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,sCAAsC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAW,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CAC9D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAElCP,QAAQ,CAACM,IAAI,CAACE,OAAO,CAAC,CACtBN,SAAS,CAACI,IAAI,CAACL,MAAM,CAAC,CACxB,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACdU,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAQ,kBAAkB,CAAGA,CAAA,GAAM,CAC/BR,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAED,mBACEN,KAAA,QAAKe,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhB,KAAA,eAAYe,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChClB,IAAA,MAAGiB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEd,KAAK,CAAI,CAAC,cAC/BF,KAAA,WAAQe,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAAC,IAAE,CAACZ,MAAM,EAAS,CAAC,EAC/C,CAAC,cACbN,IAAA,WAAQiB,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAEH,kBAAmB,CAAAE,QAAA,CAAC,eAEjE,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}